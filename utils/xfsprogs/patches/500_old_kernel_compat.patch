--- a/include/builddefs.in
+++ b/include/builddefs.in
@@ -13,7 +13,7 @@ OPTIMIZER = @opt_build@
 MALLOCLIB = @malloc_lib@
 LOADERFLAGS = @LDFLAGS@
 LTLDFLAGS = @LDFLAGS@
-CFLAGS = @CFLAGS@ -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64 -Wno-address-of-packed-member
+CFLAGS = @CFLAGS@ -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64
 BUILD_CFLAGS = @BUILD_CFLAGS@ -D_FILE_OFFSET_BITS=64 -D_TIME_BITS=64
 
 # make sure we don't pick up whacky LDFLAGS from the make environment and
--- a/include/xfs_inode.h
+++ b/include/xfs_inode.h
@@ -23,6 +23,14 @@ struct inode;
 #define I_DIRTY_TIME		0
 #define I_DIRTY_TIME_EXPIRED	0
 
+#ifndef LINUX_VERSION_CODE
+#include <linux/version.h>
+#endif
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(3,4,113)
+#ifdef IS_I_VERSION
+#undef IS_I_VERSION
+#endif
+#endif
 static inline bool IS_I_VERSION(const struct inode *inode) { return false; }
 #define inode_maybe_inc_iversion(inode,flags)	(0)
 
--- a/libxfs/xfs_fs.h
+++ b/libxfs/xfs_fs.h
@@ -322,7 +322,15 @@ typedef struct xfs_growfs_rt {
  * Structures returned from ioctl XFS_IOC_FSBULKSTAT & XFS_IOC_FSBULKSTAT_SINGLE
  */
 typedef struct xfs_bstime {
+/* __kernel_long_t since Linux 3.4 */
+#ifndef LINUX_VERSION_CODE
+#include <linux/version.h>
+#endif
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,4,0)
+	time_t		tv_sec;		/* seconds		*/
+#else
 	__kernel_long_t tv_sec;		/* seconds		*/
+#endif /* __kernel_long_t since Linux 3.4 */
 	__s32		tv_nsec;	/* and nanoseconds	*/
 } xfs_bstime_t;
 
